version: '3.8'

services:
  db:
    container_name: mongodb
    image: mongo:4.4.14
    command: mongod --port 27017
    expose:
      - "27017"
    volumes:
      - dbdata:/data/db
    networks:
      sbi:
        ipv4_address: 192.168.0.3

  nrf:
    container_name: nrf
    image: docker.io/henok28/f5gc-nrf:v3.1.1 #nrf:v3.1.1
    command: --config nrfcfg.yaml
    volumes:
      - ./configcore_v3.1.1/nrfcfg.yaml:/free5gc/nrfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.4
    depends_on:
      - db

  amf:
    container_name: amf
    image:  docker.io/henok28/f5gc-amf:v3.1.1 #amf:v3.1.1b   free5gc/amf:v3.3.0
    entrypoint: bash ./entrypoint.sh
    expose:
      - "8000"
    volumes:
      - ./configcore_v3.1.1/amfcfg.yaml:/free5gc/amfcfg.yaml
      - ./configcore_v3.1.1/amf.sh:/free5gc/entrypoint.sh
    cap_add:
      - NET_ADMIN
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.5
    depends_on:
      - nrf

  uereg:
    container_name: uereg
    image: docker.io/henok28/f5gc-uereg:latest #uereg:latest
    command: --config populatecfg.yaml
    volumes:
      - ./configcore_v3.1.1/uereg.yaml:/populate/populatecfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.13
    depends_on:
      - db
      - amf
      - nrf
  
  upf:
    container_name: upf
    image: docker.io/henok28/f5gc-upf:v3.1.1 #upf:v3.1.1
    command: bash ./upf-iptables.sh
    volumes:
      - ./configcore_v3.1.1/upfcfg.yaml:/free5gc/upfcfg.yaml
      - ./configcore_v3.1.1/upf-iptables.sh:/free5gc/upf-iptables.sh
    cap_add:
      - NET_ADMIN
    networks:
      sbi:
        ipv4_address: 192.168.0.12

  smf:
    container_name: smf
    image: docker.io/henok28/f5gc-smf:v3.1.1 #smf:v3.1.1b
    entrypoint: bash ./entrypoint.sh
    volumes:
      - ./configcore_v3.1.1/smfcfg.yaml:/free5gc/smfcfg.yaml
      - ./configcore_v3.1.1/uerouting.yaml:/free5gc/uerouting.yaml
      - ./configcore_v3.1.1/smf.sh:/free5gc/entrypoint.sh
    cap_add:
      - NET_ADMIN
    networks:
      sbi:
        ipv4_address: 192.168.0.9
    depends_on:
      - nrf
      - upf

  ausf:
    container_name: ausf
    image: docker.io/henok28/f5gc-ausf:v3.1.1 #ausf:v3.1.1
    command: --config ausfcfg.yaml
    volumes:
      - ./configcore_v3.1.1/ausfcfg.yaml:/free5gc/ausfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.6
    depends_on:
      - nrf

  nssf:
    container_name: nssf
    image: docker.io/henok28/f5gc-nssf:v3.1.1 #nssf:v3.1.1
    command: --config nssfcfg.yaml
    volumes:
      - ./configcore_v3.1.1/nssfcfg.yaml:/free5gc/nssfcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.7
    depends_on:
      - nrf

  pcf:
    container_name: pcf
    image: docker.io/henok28/f5gc-pcf:v3.1.1 #pcf:v3.1.1
    command: --config pcfcfg.yaml
    volumes:
      - ./configcore_v3.1.1/pcfcfg.yaml:/free5gc/pcfcfg.yaml
    cap_add:
      - NET_ADMIN
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.8
    depends_on:
      - nrf

  udm:
    container_name: udm
    image: docker.io/henok28/f5gc-udm:v3.1.1 #udm:v3.1.1
    command: --config udmcfg.yaml
    volumes:
      - ./configcore_v3.1.1/udmcfg.yaml:/free5gc/udmcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.10
    depends_on:
      - nrf

  udr:
    container_name: udr
    image: docker.io/henok28/f5gc-udr:v3.1.1 #udr:v3.1.1
    command: --config udrcfg.yaml
    volumes:
      - ./configcore_v3.1.1/udrcfg.yaml:/free5gc/udrcfg.yaml
    environment:
      GIN_MODE: release
    networks:
      sbi:
        ipv4_address: 192.168.0.11
    depends_on:
      - nrf


  oai-cucp:
        image: oaisoftwarealliance/oai-gnb:develop
        container_name: rfsim5g-oai-cucp
        cap_drop:
            - ALL
        environment:
            USE_ADDITIONAL_OPTIONS: --sa --log_config.global_log_options level,nocolor,time
                                    --gNBs.[0].E1_INTERFACE.[0].ipv4_cucp 192.168.77.2
                                    --gNBs.[0].local_s_address 192.168.72.2
            ASAN_OPTIONS: detect_leaks=0
        depends_on:
            - upf
        networks:
            # core_net:
            #     ipv4_address: 192.168.71.150
            sbi:
                ipv4_address: 192.168.0.14
            f1c_net:
                ipv4_address: 192.168.72.2
            e1_net:
                ipv4_address: 192.168.77.2
            satgateway-network:
                ipv4_address: 192.168.35.5
        volumes:
            - ./oai-ngran_conf/gnb-cu/cucp/gnb-cucp.sa.f1.conf:/opt/oai-gnb/etc/gnb.conf
        healthcheck:
            test: /bin/bash -c "pgrep nr-softmodem"
            interval: 10s
            timeout: 5s
            retries: 5

  gateway:
    container_name: ${GW_CONTAINER_NAME:-gateway}
    build: /home/henok/disag_vcc/build_docker_images/opensand/gateway/
    entrypoint: ./opensand_config/entrypoint.sh
    ports:
      - "3141"
      - "5358"
      - "5926"
    volumes:
      - /home/henok/disag_vcc/build_docker_images/opensand/gateway/config:/opensand_config
      - /home/henok/disag_vcc/build_docker_images/opensand/src/:/root/go/src
    networks:
      satgateway-network:
        ipv4_address: 192.168.35.4 
      emulation: #sat:
        ipv4_address: ${EMU_NETWORK_HEAD:-172.20}.0.3 
        priority: 900
      gwlan:
        ipv4_address: "${GW_NETWORK_HEAD:-172.22}.0.3"
        priority: 1000
        ipv6_address: ${GW_IP6_HEAD:-2001:660}:6602:142:0:0:1:1
    privileged: true
    cap_add:
      - ALL
      - NET_ADMIN
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    environment:
      GOPATH: /root/go
      GIN_MODE: release

  satellite1:
    container_name: ${SAT_CONTAINER_NAME:-satellite1}
    build: /home/henok/disag_vcc/build_docker_images/opensand/satellite1/
    entrypoint: ./opensand_config/entrypoint.sh
    ports:
      - "3141"
      - "5358"
      - "5926"
      - "${SAT_PORT_NUMBER:-5656}:5656"
    volumes:
      - /home/henok/disag_vcc/build_docker_images/opensand/satellite1/config:/opensand_config
      - /home/henok/disag_vcc/build_docker_images/opensand/satellite1/attenuation_scenario:/attenuation_scenario
      - /home/henok/disag_vcc/build_docker_images/opensand/satellite1/delay_scenario:/delay_scenario
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    networks:
      emulation:
        ipv4_address: ${EMU_NETWORK_HEAD:-172.20}.0.2 #192.168.40.3
    privileged: true
    environment:
      DISPLAY: :1
      GIN_MODE: release
    depends_on:
      - "gateway"
      - "terminal"

  oai-cuup:
        image: oaisoftwarealliance/oai-nr-cuup:develop
        container_name: rfsim5g-oai-cuup
        cap_drop:
            - ALL
        environment:
            USE_ADDITIONAL_OPTIONS: --sa --log_config.global_log_options level,nocolor,time
                                    --gNBs.[0].E1_INTERFACE.[0].ipv4_cucp 192.168.77.2
                                    --gNBs.[0].E1_INTERFACE.[0].ipv4_cuup 192.168.77.3
                                    --gNBs.[0].local_s_address 192.168.73.2
                                    --gNBs.[0].remote_s_address 127.0.0.1
            ASAN_OPTIONS: detect_leaks=0
        depends_on:
            - oai-cucp
        networks:
            sbi:
                ipv4_address: 192.168.0.15
            # core_net:
            #     ipv4_address: 192.168.71.161
            f1u_1_net:
                ipv4_address: 192.168.73.2
            e1_net:
                ipv4_address: 192.168.77.3
            emulation:
                ipv4_address: 172.20.0.5
        volumes:
            - ./oai-ngran_conf/gnb-cu/cuup/gnb-cuup.sa.f1.conf:/opt/oai-gnb/etc/gnb.conf
        healthcheck:
            test: /bin/bash -c "pgrep nr-cuup"
            interval: 10s
            timeout: 5s
            retries: 5

  terminal:
    container_name: ${ST_CONTAINER_NAME:-terminal}
    build: /home/henok/disag_vcc/build_docker_images/opensand/terminal
    entrypoint: ./opensand_config/entrypoint.sh
    ports:
      - "3141"
      - "5358"
      - "5926"
    volumes:
      - /home/henok/disag_vcc/build_docker_images/opensand/terminal/config:/opensand_config
      - /home/henok/disag_vcc/build_docker_images/opensand/src/:/root/go/src
    environment:
      GOPATH: /root/go
      GIN_MODE: release
    networks:
      satterminal-network:
        ipv4_address: 192.168.30.3 #172.21.0.4
      emulation:
        ipv4_address: ${EMU_NETWORK_HEAD:-172.20}.0.4 #192.168.40.5
        priority: 900
      stlan:
        ipv4_address: "${ST_NETWORK_HEAD:-172.21}.0.4"
        priority: 1000
        ipv6_address: ${ST_IP6_HEAD:-2001:661}:6602:142:0:0:1:2
    privileged: true
    cap_add:
      - ALL
      - NET_ADMIN
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
  
  oai-du:
        image: oaisoftwarealliance/oai-gnb:develop
        container_name: rfsim5g-oai-du
        cap_drop:
            - ALL
        environment:
            USE_ADDITIONAL_OPTIONS: --sa --rfsim --log_config.global_log_options level,nocolor,time
                                    --MACRLCs.[0].local_n_address 192.168.72.3
                                    --MACRLCs.[0].remote_n_address 192.168.72.2
                                    --MACRLCs.[0].local_n_address_f1u 192.168.73.3
            ASAN_OPTIONS: detect_leaks=0
        depends_on:
            - oai-cucp
            - oai-cuup
            - terminal
        networks:
            sbi:
                ipv4_address: 192.168.0.16
            f1c_net:
                ipv4_address: 192.168.72.3
            f1u_1_net:
                ipv4_address: 192.168.73.3
            ue_net:
                ipv4_address: 192.168.78.2
        volumes:
            - ./oai-ngran_conf/gnb-du/gnb-du.sa.band78.106prb.rfsim.conf:/opt/oai-gnb/etc/gnb.conf
        healthcheck:
            test: /bin/bash -c "pgrep nr-softmodem"
            interval: 10s
            timeout: 5s
            retries: 5

  oai-nr-ue:
        image: oaisoftwarealliance/oai-nr-ue:develop
        container_name: rfsim5g-oai-nr-ue
        cap_drop:
            - ALL
        cap_add:
            - NET_ADMIN  # for interface bringup
            - NET_RAW    # for ping
        environment:
            USE_ADDITIONAL_OPTIONS: --sa --rfsim --log_config.global_log_options level,nocolor,time
                                    -r 106 --numerology 1 -C 3619200000
                                    --uicc0.imsi 208930000000001
                                    --rfsimulator.serveraddr 192.168.78.2
        depends_on:
            - oai-du
        networks:
            sbi:
                ipv4_address: 192.168.0.17
            ue_net:
                ipv4_address: 192.168.78.5
        devices:
             - /dev/net/tun:/dev/net/tun
        volumes:
            - ./oai-ngran_conf/nr-ue/nrue.uicc.conf:/opt/oai-nr-ue/etc/nr-ue.conf
        healthcheck:
            test: /bin/bash -c "pgrep nr-uesoftmodem"
            interval: 10s
            timeout: 5s
            retries: 5



networks:
  sbi:
    name: sbi
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/24
    driver_opts:
      com.docker.network.bridge.name: sbi-network
  f1c_net:
        driver: bridge
        name: rfsim5g-oai-f1c-net
        ipam:
            config:
                - subnet: 192.168.72.0/28
        driver_opts:
            com.docker.network.bridge.name: "rfsim5g-f1c"
  f1u_1_net:
        driver: bridge
        name: rfsim5g-oai-f1u-1-net
        ipam:
            config:
                - subnet: 192.168.73.0/28
        driver_opts:
            com.docker.network.bridge.name: "rfsim5g-f1u_1"
  e1_net:
        driver: bridge
        name: rfsim5g-oai-e1-net
        ipam:
            config:
                - subnet: 192.168.77.0/28
        driver_opts:
            com.docker.network.bridge.name: "rfsim5g-e1"
  ue_net:
        driver: bridge
        name: rfsim5g-oai-ue-net
        ipam:
            config:
                - subnet: 192.168.78.0/28
        driver_opts:
            com.docker.network.bridge.name: "rfsim5g-ue"
  satterminal-network:
    name: satterminal-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.30.0/24 #172.21.0.0/24
    driver_opts:
      com.docker.network.bridge.name: sat-ter-net
  satgateway-network:
    name: satgateway-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.35.0/24 #172.22.0.0/24
    driver_opts:
      com.docker.network.bridge.name: sat-gate-net
  emulation:
    name: ${EMU_NETWORK_NAME:-emulation}
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${EMU_NETWORK_HEAD:-172.20}.0.0/24" #192.168.40.0/24
    driver_opts:
      com.docker.network.bridge.name: emu-net
  gwlan:
    name: ${GW_NETWORK_NAME:-gwlan}
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "${GW_NETWORK_HEAD:-172.22}.0.0/24"
        - subnet: "${GW_IP6_HEAD:-2001:660}:6602:142::/64"
  stlan:
    name: ${ST_NETWORK_NAME:-stlan}
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "${ST_NETWORK_HEAD:-172.21}.0.0/24"
        - subnet: "${ST_IP6_HEAD:-2001:661}:6602:142::/64"
  gui:
    name: ${GUI_NETWORK_NAME:-gui}
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${GUI_NETWORK_HEAD:-172.25}.0.0/24"
          gateway: "${GUI_NETWORK_HEAD:-172.25}.0.1"

volumes:
  dbdata: